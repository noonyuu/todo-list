package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"

	"github.com/google/uuid"
	"github.com/noonyuu/todo-list/graph/model"
)

// CreateLabel is the resolver for the createLabel field.
func (r *mutationResolver) CreateLabel(ctx context.Context, name string) (*model.Label, error) {
	label := &model.Label{
		ID:   uuid.NewString(),
		Name: name,
	}

	if err := r.DB.Create(label).Error; err != nil {
		return nil, fmt.Errorf("failed to create label: %w", err)
	}

	return label, nil
}

// Labels is the resolver for the labels field.
func (r *queryResolver) Labels(ctx context.Context) ([]*model.Label, error) {
	labels := []*model.Label{}
	if err := r.DB.Find(&labels).Error; err != nil {
		return nil, fmt.Errorf("failed to fetch labels: %w", err)
	}

	return labels, nil
}
